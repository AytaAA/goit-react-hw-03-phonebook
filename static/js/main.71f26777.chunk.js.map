{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactItem/ContactItem.module.css","Components/Filter/Filter.module.css","Components/Container/Container.module.css","Components/ContactList/ContactList.module.css","Components/Filter/Filter.js","Components/Container/Container.js","Components/ContactForm/ContactForm.js","Components/ContactItem/ContactItem.js","Components/ContactList/ContactList.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Filter","value","onChange","className","style","filter_label","type","Container","children","container","ContactForm","state","name","number","onInputChange","e","currentTarget","setState","onHandleSubmit","preventDefault","props","onSubmit","reset","form_container","this","form_label","input","pattern","title","required","add_button","Component","ContactItem","id","removeContact","list_item","new_item","delete_btn","onClick","ContactList","contacts","contact_list","map","App","initialContacts","filter","addContact","normalizedName","toLocaleLowerCase","contact","uuidv4","some","alert","contactId","prevContacts","removeIndex","item","indexOf","splice","changeFilter","prevProps","prevState","nextContacts","localStorage","setItem","JSON","stringify","getItem","parsedContacts","parse","normalizedFilter","filteredContacts","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71f26777.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_container\":\"ContactForm_form_container__3KjT-\",\"add_button\":\"ContactForm_add_button__UHD41\",\"input\":\"ContactForm_input__3xmbC\",\"form_label\":\"ContactForm_form_label__2siIE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_item\":\"ContactItem_list_item__19fuO\",\"delete_btn\":\"ContactItem_delete_btn__3QAx0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_label\":\"Filter_filter_label__2vSLg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__vgUFj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"ContactList_contact_list__2nmjB\"};","import React from \"react\"\r\nimport style from \"./Filter.module.css\"\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n    <label className={style.filter_label}>\r\n        Find contacts by name\r\n        <br />\r\n        <input type=\"text\" value={value} onChange={onChange} />\r\n    </label>\r\n)\r\n\r\nexport default Filter\r\n","import React from \"react\"\r\nimport style from \"./Container.module.css\"\r\n\r\nconst Container = ({ children }) => <div className={style.container}>{children}</div>\r\n\r\nexport default Container\r\n","import React, { Component } from \"react\"\r\nimport style from \"./ContactForm.module.css\"\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: \"\",\r\n        number: \"\",\r\n    }\r\n    onInputChange = (e) => {\r\n        const { name, value } = e.currentTarget\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    onHandleSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.onSubmit(this.state)\r\n        this.reset()\r\n    }\r\n    reset = (e) => {\r\n        this.setState({\r\n            name: \"\",\r\n            number: \"\",\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={style.form_container}>\r\n                <form onSubmit={this.onHandleSubmit}>\r\n                    <h2 className={style.form_label}>Name</h2>\r\n                    <input\r\n                        className={style.input}\r\n                        onChange={this.onInputChange}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        value={this.state.name}\r\n                    />\r\n                    <h2 className={style.form_label}>Number</h2>\r\n                    <input\r\n                        className={style.input}\r\n                        onChange={this.onInputChange}\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        value={this.state.number}\r\n                    />\r\n                    <br />\r\n                    <button type=\"submit\" className={style.add_button}>\r\n                        {\" \"}\r\n                        Add contact\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ContactForm\r\n","import React from \"react\"\r\nimport style from \"./ContactItem.module.css\"\r\n\r\nconst ContactItem = ({ id, name, number, removeContact }) => (\r\n    <li key={id} className={style.list_item}>\r\n        <span className={style.new_item}>\r\n            {name}: {number}\r\n        </span>\r\n        <button className={style.delete_btn} onClick={() => removeContact(id)}>\r\n            Delete\r\n        </button>\r\n    </li>\r\n)\r\n\r\nexport default ContactItem\r\n","import React from \"react\"\r\nimport ContactItem from \"../ContactItem\"\r\nimport style from \"./ContactList.module.css\"\r\n\r\nconst ContactList = ({ contacts, removeContact }) => (\r\n    <ul className={style.contact_list}>\r\n        {contacts.map(({ id, name, number }) => (\r\n            <ContactItem id={id} key={id} name={name} number={number} removeContact={removeContact} />\r\n        ))}\r\n    </ul>\r\n)\r\n\r\nexport default ContactList\r\n","import React, { Component } from \"react\"\n//data\nimport initialContacts from \"./data/contacts.json\"\n//components\nimport Filter from \"./Components/Filter\"\nimport Container from \"./Components/Container\"\nimport ContactForm from \"./Components/ContactForm\"\nimport ContactList from \"./Components/ContactList\"\nimport { v4 as uuidv4 } from \"uuid\"\n\nclass App extends Component {\n    state = {\n        contacts: initialContacts,\n        name: \"\",\n        filter: \"\",\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const nextContacts = this.state.contacts\n        const prevContacts = prevState.contacts\n\n        if (nextContacts !== prevContacts) {\n            localStorage.setItem(\"contacts\", JSON.stringify(nextContacts))\n        }\n    }\n\n    componentDidMount() {\n        const contacts = localStorage.getItem(\"contacts\")\n        const parsedContacts = JSON.parse(contacts)\n\n        if (parsedContacts) {\n            this.setState({ contacts: parsedContacts })\n        }\n    }\n\n    addContact = ({ name, number }) => {\n        const { contacts } = this.state\n        const normalizedName = name.toLocaleLowerCase()\n        const contact = {\n            id: uuidv4(),\n            name,\n            number,\n        }\n\n        contacts.some((contact) => contact.name.toLocaleLowerCase() === normalizedName)\n            ? alert(\"Такой контакт существует\")\n            : this.setState(({ contacts }) => ({ contacts: [contact, ...contacts] }))\n    }\n\n    removeContact = (contactId) => {\n        const prevContacts = this.state.contacts\n        const removeIndex = prevContacts.map((item) => item.id).indexOf(contactId)\n        ~removeIndex && prevContacts.splice(removeIndex, 1)\n\n        this.setState({ contacts: prevContacts })\n    }\n    changeFilter = (e) => {\n        this.setState({ filter: e.currentTarget.value })\n    }\n\n    render() {\n        const { contacts, filter } = this.state\n\n        const normalizedFilter = filter.toLocaleLowerCase()\n\n        const filteredContacts = contacts.filter((contact) =>\n            contact.name.toLocaleLowerCase().includes(normalizedFilter)\n        )\n\n        return (\n            <Container>\n                <h1>Phonebook</h1>\n                <ContactForm onSubmit={this.addContact} />\n\n                <h1>Contacts</h1>\n                <Filter value={filter} onChange={this.changeFilter} />\n                <ContactList contacts={filteredContacts} removeContact={this.removeContact} />\n            </Container>\n        )\n    }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}